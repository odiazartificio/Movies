name: Workflow
on:
  push:
    branches:
      - feat-devsecops

jobs:        
  SAST:
    runs-on: ubuntu-latest
    steps:

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Validando existencia de proyecto en SonarCloud
      id: validateProjectOnSonar
      run: |
        set +e
        curl -f -X POST -u '${{ secrets.SONAR_TOKEN }}:' 'https://sonarcloud.io/api/projects/create' -d 'name=${{ github.event.repository.name }}' -d 'project=${{ github.event.repository.name }}' -d 'organization=oscar-diaz-devsecops' -d 'visibility=public'
        if [ $? -ne 0 ]; then
          echo "Proyecto ya existe en Sonarcloud"
          echo "::set-output name=proyectoExiste::1"
        else
          echo "Proyecto ${{ github.event.repository.name }} creado exitosamente en Sonarcloud"
          
          echo "Se establece rama main como rama por defecto"
          curl -X POST -u '${{ secrets.SONAR_TOKEN }}:' 'https://sonarcloud.io/api/project_branches/rename' -d 'name=main' -d 'project=${{ github.event.repository.name }}'
        fi
        set -e
    
    - name: Enable execution package.json
      run: |
        chmod 777 package.json

    - name: Run SonarQube analysis
      run: |
        npx sonar-scanner \
        -Dsonar.projectKey=${{ github.event.repository.name }} \
        -Dsonar.organization=oscar-diaz-devsecops \
        -Dsonar.host.url=https://sonarcloud.io \
        -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
        -Dsonar.branch.name=feat-devsecops

#--------------------- SCA -------------------------------------------
      
  SCA:
    needs: SAST
    runs-on: ubuntu-latest
    steps:
    
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Build
      id: build
      run: |
        pwd
        ls -R

    - name: Dependency Check
      uses: dependency-check/Dependency-Check_Action@1.1.0
      env:
        JAVA_HOME: /opt/jdk
      id: Depcheck
      with:
        project: '${{ github.event.repository.name }}'
        path: '.'
        format: 'HTML'
        out: 'reports'
        args: >
          --failOnCVSS 7
          --enableRetired

    - name: Upload Test result
      uses: actions/upload-artifact@master
      with:
        name: Depcheck report
        path: ${{github.workspace}}/reports


#-------------------Docker Build Image----------------------------------

  DockerBuild:
    needs: SCA
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build Docker image
        run: |
          docker build -t odiazartificio/movies:latest .
          docker tag odiazartificio/movies:latest odiazartificio/movies:feat-clase2
      
      - name: Push Docker image
        run: |
          docker push odiazartificio/movies:latest
          docker push odiazartificio/movies:feat-clase2